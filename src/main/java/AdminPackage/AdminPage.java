package AdminPackage;
import com.formdev.flatlaf.FlatLightLaf;
import com.mycompany.gestion_etudiants.ConnectToBD;

import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.PatternSyntaxException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 * @author AdMin
 */
public class AdminPage extends javax.swing.JFrame {

    private TableRowSorter<DefaultTableModel> sorter;
    private static JTable TableClicked;
    
    /**
     * Creates new form AdminPage
     * @throws javax.swing.UnsupportedLookAndFeelException
     */
    public AdminPage() throws UnsupportedLookAndFeelException{
        UIManager.setLookAndFeel( new FlatLightLaf() );
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AdminTabbedPane = new javax.swing.JTabbedPane();
        AcceuilPane = new javax.swing.JPanel();
        ISIEtdListPane = new javax.swing.JPanel();
        ISIEtdListTabbedPane = new javax.swing.JTabbedPane();
        ISI1EtdListPane = new javax.swing.JPanel();
        ISI1EtdTotalLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ISI1EtdListTable = new javax.swing.JTable();
        ISI1EtdTotalResult = new javax.swing.JLabel();
        ISI1SearchField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        ISI2EtdListPane = new javax.swing.JPanel();
        ISI2EtdTotalLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ISI2EtdListTable = new javax.swing.JTable();
        ISI1EtdTotalResult1 = new javax.swing.JLabel();
        ISI2EtdTotalResult = new javax.swing.JLabel();
        ISI2SearchField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ISI3EtdListPane = new javax.swing.JPanel();
        ISI3EtdTotalLabel = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        ISI3EtdListTable = new javax.swing.JTable();
        ISI3EtdTotalResult = new javax.swing.JLabel();
        ISI3SearchField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ISI4EtdListPane = new javax.swing.JPanel();
        ISI4EtdTotalLabel = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        ISI4EtdListTable = new javax.swing.JTable();
        ISI4EtdTotalResult = new javax.swing.JLabel();
        ISI4SearchField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ISI5EtdListPane = new javax.swing.JPanel();
        ISI5EtdTotalLabel = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        ISI5EtdListTable = new javax.swing.JTable();
        ISI5EtdTotalResult = new javax.swing.JLabel();
        ISI5SearchField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        MGEEtdListPane = new javax.swing.JPanel();
        MGEEtdListeTabbedPane = new javax.swing.JTabbedPane();
        MGE1EtdListPane = new javax.swing.JPanel();
        MGE1EtdTotalResult = new javax.swing.JLabel();
        MGE1EtdTotalLable = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        MGE1EtdListTable = new javax.swing.JTable();
        MGE1SearchField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        MGE2EtdListPane = new javax.swing.JPanel();
        MGE2EtdTotalResult = new javax.swing.JLabel();
        MGE2EtdTotalLabel = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        MGE2EtdListTable = new javax.swing.JTable();
        MGE2SearchField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        MGE3EtdListPane = new javax.swing.JPanel();
        MGE3EtdTotalResult = new javax.swing.JLabel();
        MGE3EtdTotalLabel = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        MGE3EtdListTable = new javax.swing.JTable();
        MGE3SearchField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        MGE4EtdListPane = new javax.swing.JPanel();
        MGE4EtdTotalResult = new javax.swing.JLabel();
        MGE4EtdTotalLabel = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        MGE4EtdListTable = new javax.swing.JTable();
        MGE4SearchField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        MGE5EtdListPane = new javax.swing.JPanel();
        MGE5EtdTotalResult = new javax.swing.JLabel();
        MG5EtdTotalLabel = new javax.swing.JLabel();
        jScrollPane17 = new javax.swing.JScrollPane();
        MGE5EtdListTable = new javax.swing.JTable();
        MGE5SearchField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        ISIPaymentHistTP = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        ISIPaymentHistTable = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        ISIPayementSearchField = new javax.swing.JTextField();
        MGEPaymentHistTP = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        MGEPayementSearchField = new javax.swing.JTextField();
        jScrollPane10 = new javax.swing.JScrollPane();
        MGEPaymentHistTable = new javax.swing.JTable();
        AdminNameLabel = new javax.swing.JLabel();
        Usericone = new javax.swing.JLabel();
        DeconnexionBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        AddUserBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Système de Gestion des étudiants");
        setMinimumSize(new java.awt.Dimension(920, 620));

        AdminTabbedPane.setAutoscrolls(true);

        javax.swing.GroupLayout AcceuilPaneLayout = new javax.swing.GroupLayout(AcceuilPane);
        AcceuilPane.setLayout(AcceuilPaneLayout);
        AcceuilPaneLayout.setHorizontalGroup(
            AcceuilPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1042, Short.MAX_VALUE)
        );
        AcceuilPaneLayout.setVerticalGroup(
            AcceuilPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 553, Short.MAX_VALUE)
        );

        AdminTabbedPane.addTab("Accueil", AcceuilPane);

        ISIEtdListPane.setName(""); // NOI18N

        ISIEtdListTabbedPane.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        ISIEtdListTabbedPane.setAutoscrolls(true);

        ISI1EtdTotalLabel.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        ISI1EtdTotalLabel.setText("Total étudiants :");

        ISI1EtdListTable.setAutoCreateRowSorter(true);
        ISI1EtdListTable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ISI1EtdListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID étudiant", "Nom", "Prénom", "Adresse mail", "Niveau", "Filiere", "Bourse"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ISI1EtdListTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ISI1EtdListTable.setRowHeight(30);
        ISI1EtdListTable.setShowGrid(true);
        ISI1EtdListTable.getTableHeader().setReorderingAllowed(false);
        ISI1EtdListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ISI1EtdListTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(ISI1EtdListTable);

        ISI1EtdTotalResult.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        ISI1SearchField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ISI1SearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ISI1SearchFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ISI1SearchFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ISI1SearchFieldKeyTyped(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\AdMin\\OneDrive\\Documents\\NetBeansProjects\\Gestion_Etudiants\\src\\main\\java\\Images\\rechercher.png")); // NOI18N

        javax.swing.GroupLayout ISI1EtdListPaneLayout = new javax.swing.GroupLayout(ISI1EtdListPane);
        ISI1EtdListPane.setLayout(ISI1EtdListPaneLayout);
        ISI1EtdListPaneLayout.setHorizontalGroup(
            ISI1EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ISI1EtdListPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ISI1EtdTotalLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ISI1EtdTotalResult, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ISI1SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1042, Short.MAX_VALUE)
        );
        ISI1EtdListPaneLayout.setVerticalGroup(
            ISI1EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ISI1EtdListPaneLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(ISI1EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ISI1EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ISI1EtdTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ISI1EtdTotalResult, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(ISI1SearchField))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                .addContainerGap())
        );

        ISIEtdListTabbedPane.addTab("Bac+1", ISI1EtdListPane);

        ISI2EtdTotalLabel.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        ISI2EtdTotalLabel.setText("Total étudiants :");

        ISI2EtdListTable.setAutoCreateRowSorter(true);
        ISI2EtdListTable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ISI2EtdListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID étudiant", "Nom", "Prénom", "Adresse mail", "Niveau", "Filiere", "Bourse"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ISI2EtdListTable.setRowHeight(30);
        ISI2EtdListTable.setShowGrid(true);
        ISI2EtdListTable.getTableHeader().setReorderingAllowed(false);
        ISI2EtdListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ISI2EtdListTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(ISI2EtdListTable);

        ISI1EtdTotalResult1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        ISI2EtdTotalResult.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        ISI2SearchField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ISI2SearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ISI2SearchFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ISI2SearchFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ISI2SearchFieldKeyTyped(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\AdMin\\OneDrive\\Documents\\NetBeansProjects\\Gestion_Etudiants\\src\\main\\java\\Images\\rechercher.png")); // NOI18N

        javax.swing.GroupLayout ISI2EtdListPaneLayout = new javax.swing.GroupLayout(ISI2EtdListPane);
        ISI2EtdListPane.setLayout(ISI2EtdListPaneLayout);
        ISI2EtdListPaneLayout.setHorizontalGroup(
            ISI2EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ISI2EtdListPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ISI2EtdTotalLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ISI2EtdTotalResult, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ISI2SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1042, Short.MAX_VALUE)
            .addGroup(ISI2EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ISI2EtdListPaneLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(ISI1EtdTotalResult1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        ISI2EtdListPaneLayout.setVerticalGroup(
            ISI2EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ISI2EtdListPaneLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(ISI2EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ISI2EtdTotalLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(ISI2EtdTotalResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ISI2SearchField)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(ISI2EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ISI2EtdListPaneLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(ISI1EtdTotalResult1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        ISIEtdListTabbedPane.addTab("Bac+2", ISI2EtdListPane);

        ISI3EtdTotalLabel.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        ISI3EtdTotalLabel.setText("Total étudiants :");

        ISI3EtdListTable.setAutoCreateRowSorter(true);
        ISI3EtdListTable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ISI3EtdListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID étudiant", "Nom", "Prénom", "Adresse mail", "Niveau", "Filiere", "Bourse"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ISI3EtdListTable.setRowHeight(30);
        ISI3EtdListTable.setShowGrid(true);
        ISI3EtdListTable.getTableHeader().setReorderingAllowed(false);
        ISI3EtdListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ISI3EtdListTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(ISI3EtdListTable);

        ISI3EtdTotalResult.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        ISI3SearchField.setMinimumSize(new java.awt.Dimension(64, 23));
        ISI3SearchField.setPreferredSize(new java.awt.Dimension(64, 23));
        ISI3SearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ISI3SearchFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ISI3SearchFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ISI3SearchFieldKeyTyped(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\AdMin\\OneDrive\\Documents\\NetBeansProjects\\Gestion_Etudiants\\src\\main\\java\\Images\\rechercher.png")); // NOI18N

        javax.swing.GroupLayout ISI3EtdListPaneLayout = new javax.swing.GroupLayout(ISI3EtdListPane);
        ISI3EtdListPane.setLayout(ISI3EtdListPaneLayout);
        ISI3EtdListPaneLayout.setHorizontalGroup(
            ISI3EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ISI3EtdListPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ISI3EtdTotalLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ISI3EtdTotalResult, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 386, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ISI3SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        ISI3EtdListPaneLayout.setVerticalGroup(
            ISI3EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ISI3EtdListPaneLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(ISI3EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ISI3EtdTotalLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(ISI3EtdTotalResult, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ISI3SearchField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                .addContainerGap())
        );

        ISIEtdListTabbedPane.addTab("Bac+3", ISI3EtdListPane);

        ISI4EtdTotalLabel.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        ISI4EtdTotalLabel.setText("Total étudiants :");

        ISI4EtdListTable.setAutoCreateRowSorter(true);
        ISI4EtdListTable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ISI4EtdListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID étudiant", "Nom", "Prénom", "Adresse mail", "Niveau", "Filiere", "Bourse"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ISI4EtdListTable.setRowHeight(30);
        ISI4EtdListTable.setShowGrid(true);
        ISI4EtdListTable.getTableHeader().setReorderingAllowed(false);
        ISI4EtdListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ISI4EtdListTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(ISI4EtdListTable);

        ISI4EtdTotalResult.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        ISI4SearchField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ISI4SearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ISI4SearchFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ISI4SearchFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ISI4SearchFieldKeyTyped(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon("C:\\Users\\AdMin\\OneDrive\\Documents\\NetBeansProjects\\Gestion_Etudiants\\src\\main\\java\\Images\\rechercher.png")); // NOI18N

        javax.swing.GroupLayout ISI4EtdListPaneLayout = new javax.swing.GroupLayout(ISI4EtdListPane);
        ISI4EtdListPane.setLayout(ISI4EtdListPaneLayout);
        ISI4EtdListPaneLayout.setHorizontalGroup(
            ISI4EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ISI4EtdListPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ISI4EtdTotalLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ISI4EtdTotalResult, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 392, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ISI4SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        ISI4EtdListPaneLayout.setVerticalGroup(
            ISI4EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ISI4EtdListPaneLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(ISI4EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ISI4EtdTotalLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(ISI4EtdTotalResult, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ISI4SearchField)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                .addContainerGap())
        );

        ISIEtdListTabbedPane.addTab("Bac+4 (ISI & ISRT)", ISI4EtdListPane);

        ISI5EtdTotalLabel.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        ISI5EtdTotalLabel.setText("Total étudiants :");

        ISI5EtdListTable.setAutoCreateRowSorter(true);
        ISI5EtdListTable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ISI5EtdListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID étudiant", "Nom", "Prénom", "Adresse mail", "Niveau", "Filiere", "Bourse"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ISI5EtdListTable.setRowHeight(30);
        ISI5EtdListTable.setShowGrid(true);
        ISI5EtdListTable.getTableHeader().setReorderingAllowed(false);
        ISI5EtdListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ISI5EtdListTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(ISI5EtdListTable);

        ISI5EtdTotalResult.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ISI5EtdTotalResult.setToolTipText("");

        ISI5SearchField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ISI5SearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ISI5SearchFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ISI5SearchFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ISI5SearchFieldKeyTyped(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon("C:\\Users\\AdMin\\OneDrive\\Documents\\NetBeansProjects\\Gestion_Etudiants\\src\\main\\java\\Images\\rechercher.png")); // NOI18N

        javax.swing.GroupLayout ISI5EtdListPaneLayout = new javax.swing.GroupLayout(ISI5EtdListPane);
        ISI5EtdListPane.setLayout(ISI5EtdListPaneLayout);
        ISI5EtdListPaneLayout.setHorizontalGroup(
            ISI5EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ISI5EtdListPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ISI5EtdTotalLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ISI5EtdTotalResult, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 394, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ISI5SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
            .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        ISI5EtdListPaneLayout.setVerticalGroup(
            ISI5EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ISI5EtdListPaneLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(ISI5EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ISI5EtdTotalLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(ISI5EtdTotalResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ISI5SearchField)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                .addContainerGap())
        );

        ISIEtdListTabbedPane.addTab("Bac+5 (ISI & ISRT)", ISI5EtdListPane);

        javax.swing.GroupLayout ISIEtdListPaneLayout = new javax.swing.GroupLayout(ISIEtdListPane);
        ISIEtdListPane.setLayout(ISIEtdListPaneLayout);
        ISIEtdListPaneLayout.setHorizontalGroup(
            ISIEtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ISIEtdListTabbedPane)
        );
        ISIEtdListPaneLayout.setVerticalGroup(
            ISIEtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ISIEtdListTabbedPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        AdminTabbedPane.addTab("Liste des étudiants ISI", ISIEtdListPane);

        MGEEtdListeTabbedPane.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        MGEEtdListeTabbedPane.setAutoscrolls(true);

        MGE1EtdTotalResult.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N

        MGE1EtdTotalLable.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        MGE1EtdTotalLable.setText("Total étudiants :");

        MGE1EtdListTable.setAutoCreateRowSorter(true);
        MGE1EtdListTable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        MGE1EtdListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID étudiant", "Nom", "Prénom", "Adresse mail", "Niveau", "Filiere", "Bourse"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MGE1EtdListTable.setRowHeight(30);
        MGE1EtdListTable.setShowGrid(true);
        MGE1EtdListTable.getTableHeader().setReorderingAllowed(false);
        MGE1EtdListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MGE1EtdListTableMouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(MGE1EtdListTable);

        MGE1SearchField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        MGE1SearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MGE1SearchFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MGE1SearchFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MGE1SearchFieldKeyTyped(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon("C:\\Users\\AdMin\\OneDrive\\Documents\\NetBeansProjects\\Gestion_Etudiants\\src\\main\\java\\Images\\rechercher.png")); // NOI18N

        javax.swing.GroupLayout MGE1EtdListPaneLayout = new javax.swing.GroupLayout(MGE1EtdListPane);
        MGE1EtdListPane.setLayout(MGE1EtdListPaneLayout);
        MGE1EtdListPaneLayout.setHorizontalGroup(
            MGE1EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MGE1EtdListPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MGE1EtdTotalLable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MGE1EtdTotalResult, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 414, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MGE1SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
            .addComponent(jScrollPane13, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        MGE1EtdListPaneLayout.setVerticalGroup(
            MGE1EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MGE1EtdListPaneLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(MGE1EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MGE1EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(MGE1EtdTotalLable, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                        .addComponent(MGE1EtdTotalResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(MGE1SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                .addContainerGap())
        );

        MGEEtdListeTabbedPane.addTab("Bac+1", MGE1EtdListPane);

        MGE2EtdTotalResult.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N

        MGE2EtdTotalLabel.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        MGE2EtdTotalLabel.setText("Total étudiants :");

        MGE2EtdListTable.setAutoCreateRowSorter(true);
        MGE2EtdListTable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        MGE2EtdListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID étudiant", "Nom", "Prénom", "Adresse mail", "Niveau", "Filiere", "Bourse"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MGE2EtdListTable.setRowHeight(30);
        MGE2EtdListTable.setShowGrid(true);
        MGE2EtdListTable.getTableHeader().setReorderingAllowed(false);
        MGE2EtdListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MGE2EtdListTableMouseClicked(evt);
            }
        });
        jScrollPane14.setViewportView(MGE2EtdListTable);

        MGE2SearchField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        MGE2SearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MGE2SearchFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MGE2SearchFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MGE2SearchFieldKeyTyped(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon("C:\\Users\\AdMin\\OneDrive\\Documents\\NetBeansProjects\\Gestion_Etudiants\\src\\main\\java\\Images\\rechercher.png")); // NOI18N

        javax.swing.GroupLayout MGE2EtdListPaneLayout = new javax.swing.GroupLayout(MGE2EtdListPane);
        MGE2EtdListPane.setLayout(MGE2EtdListPaneLayout);
        MGE2EtdListPaneLayout.setHorizontalGroup(
            MGE2EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MGE2EtdListPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MGE2EtdTotalLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MGE2EtdTotalResult, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 414, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MGE2SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
            .addComponent(jScrollPane14, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        MGE2EtdListPaneLayout.setVerticalGroup(
            MGE2EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MGE2EtdListPaneLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(MGE2EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(MGE2EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(MGE2EtdTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(MGE2EtdTotalResult, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(MGE2SearchField, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                .addContainerGap())
        );

        MGEEtdListeTabbedPane.addTab("Bac+2", MGE2EtdListPane);

        MGE3EtdTotalResult.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N

        MGE3EtdTotalLabel.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        MGE3EtdTotalLabel.setText("Total étudiants :");

        MGE3EtdListTable.setAutoCreateRowSorter(true);
        MGE3EtdListTable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        MGE3EtdListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID étudiant", "Nom", "Prénom", "Adresse mail", "Niveau", "Filiere", "Bourse"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MGE3EtdListTable.setRowHeight(30);
        MGE3EtdListTable.setShowGrid(true);
        MGE3EtdListTable.getTableHeader().setReorderingAllowed(false);
        MGE3EtdListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MGE3EtdListTableMouseClicked(evt);
            }
        });
        jScrollPane15.setViewportView(MGE3EtdListTable);

        MGE3SearchField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        MGE3SearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MGE3SearchFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MGE3SearchFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MGE3SearchFieldKeyTyped(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon("C:\\Users\\AdMin\\OneDrive\\Documents\\NetBeansProjects\\Gestion_Etudiants\\src\\main\\java\\Images\\rechercher.png")); // NOI18N

        javax.swing.GroupLayout MGE3EtdListPaneLayout = new javax.swing.GroupLayout(MGE3EtdListPane);
        MGE3EtdListPane.setLayout(MGE3EtdListPaneLayout);
        MGE3EtdListPaneLayout.setHorizontalGroup(
            MGE3EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MGE3EtdListPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MGE3EtdTotalLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MGE3EtdTotalResult, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 414, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MGE3SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
            .addComponent(jScrollPane15, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        MGE3EtdListPaneLayout.setVerticalGroup(
            MGE3EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MGE3EtdListPaneLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(MGE3EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(MGE3EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(MGE3EtdTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(MGE3EtdTotalResult, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(MGE3SearchField)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                .addContainerGap())
        );

        MGEEtdListeTabbedPane.addTab("Bac+3", MGE3EtdListPane);

        MGE4EtdTotalResult.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N

        MGE4EtdTotalLabel.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        MGE4EtdTotalLabel.setText("Total étudiants :");

        MGE4EtdListTable.setAutoCreateRowSorter(true);
        MGE4EtdListTable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        MGE4EtdListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID étudiant", "Nom", "Prénom", "Adresse mail", "Niveau", "Filiere", "Bourse"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MGE4EtdListTable.setRowHeight(30);
        MGE4EtdListTable.setShowGrid(true);
        MGE4EtdListTable.getTableHeader().setReorderingAllowed(false);
        MGE4EtdListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MGE4EtdListTableMouseClicked(evt);
            }
        });
        jScrollPane16.setViewportView(MGE4EtdListTable);

        MGE4SearchField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        MGE4SearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MGE4SearchFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MGE4SearchFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MGE4SearchFieldKeyTyped(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\AdMin\\OneDrive\\Documents\\NetBeansProjects\\Gestion_Etudiants\\src\\main\\java\\Images\\rechercher.png")); // NOI18N

        javax.swing.GroupLayout MGE4EtdListPaneLayout = new javax.swing.GroupLayout(MGE4EtdListPane);
        MGE4EtdListPane.setLayout(MGE4EtdListPaneLayout);
        MGE4EtdListPaneLayout.setHorizontalGroup(
            MGE4EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MGE4EtdListPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MGE4EtdTotalLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MGE4EtdTotalResult, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 414, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MGE4SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
            .addComponent(jScrollPane16)
        );
        MGE4EtdListPaneLayout.setVerticalGroup(
            MGE4EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MGE4EtdListPaneLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(MGE4EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(MGE4EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(MGE4EtdTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(MGE4EtdTotalResult, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(MGE4SearchField)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                .addContainerGap())
        );

        MGEEtdListeTabbedPane.addTab("Bac+4 (MSTIC & FACG) ", MGE4EtdListPane);

        MGE5EtdTotalResult.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N

        MG5EtdTotalLabel.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        MG5EtdTotalLabel.setText("Total étudiants :");

        MGE5EtdListTable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        MGE5EtdListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID étudiant", "Nom", "Prénom", "Adresse mail", "Niveau", "Filiere", "Bourse"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MGE5EtdListTable.setRowHeight(30);
        MGE5EtdListTable.setShowGrid(true);
        MGE5EtdListTable.getTableHeader().setReorderingAllowed(false);
        MGE5EtdListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MGE5EtdListTableMouseClicked(evt);
            }
        });
        jScrollPane17.setViewportView(MGE5EtdListTable);

        MGE5SearchField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        MGE5SearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MGE5SearchFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MGE5SearchFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MGE5SearchFieldKeyTyped(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon("C:\\Users\\AdMin\\OneDrive\\Documents\\NetBeansProjects\\Gestion_Etudiants\\src\\main\\java\\Images\\rechercher.png")); // NOI18N

        javax.swing.GroupLayout MGE5EtdListPaneLayout = new javax.swing.GroupLayout(MGE5EtdListPane);
        MGE5EtdListPane.setLayout(MGE5EtdListPaneLayout);
        MGE5EtdListPaneLayout.setHorizontalGroup(
            MGE5EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MGE5EtdListPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MG5EtdTotalLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MGE5EtdTotalResult, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 414, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MGE5SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
            .addComponent(jScrollPane17, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        MGE5EtdListPaneLayout.setVerticalGroup(
            MGE5EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MGE5EtdListPaneLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(MGE5EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(MGE5EtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(MG5EtdTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(MGE5EtdTotalResult, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(MGE5SearchField)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                .addContainerGap())
        );

        MGEEtdListeTabbedPane.addTab("Bac+5 (MSTIC & FACG)", MGE5EtdListPane);

        javax.swing.GroupLayout MGEEtdListPaneLayout = new javax.swing.GroupLayout(MGEEtdListPane);
        MGEEtdListPane.setLayout(MGEEtdListPaneLayout);
        MGEEtdListPaneLayout.setHorizontalGroup(
            MGEEtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MGEEtdListeTabbedPane)
        );
        MGEEtdListPaneLayout.setVerticalGroup(
            MGEEtdListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MGEEtdListeTabbedPane)
        );

        AdminTabbedPane.addTab("Liste des étudiants MGE", MGEEtdListPane);

        ISIPaymentHistTable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ISIPaymentHistTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date paiement", "ID étudiant", "Nom", "Prénom", "Niveau", "Filiere", "Période payée", "Montant"
            }
        ));
        ISIPaymentHistTable.setRowHeight(30);
        ISIPaymentHistTable.setShowGrid(true);
        jScrollPane8.setViewportView(ISIPaymentHistTable);

        jLabel12.setIcon(new javax.swing.ImageIcon("C:\\Users\\AdMin\\OneDrive\\Documents\\NetBeansProjects\\Gestion_Etudiants\\src\\main\\java\\Images\\rechercher.png")); // NOI18N

        ISIPayementSearchField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ISIPayementSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ISIPayementSearchFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ISIPayementSearchFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ISIPayementSearchFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout ISIPaymentHistTPLayout = new javax.swing.GroupLayout(ISIPaymentHistTP);
        ISIPaymentHistTP.setLayout(ISIPaymentHistTPLayout);
        ISIPaymentHistTPLayout.setHorizontalGroup(
            ISIPaymentHistTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1042, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ISIPaymentHistTPLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ISIPayementSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );
        ISIPaymentHistTPLayout.setVerticalGroup(
            ISIPaymentHistTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ISIPaymentHistTPLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(ISIPaymentHistTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ISIPayementSearchField))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE))
        );

        AdminTabbedPane.addTab("Historique de payements ISI", ISIPaymentHistTP);

        jLabel13.setIcon(new javax.swing.ImageIcon("C:\\Users\\AdMin\\OneDrive\\Documents\\NetBeansProjects\\Gestion_Etudiants\\src\\main\\java\\Images\\rechercher.png")); // NOI18N

        MGEPayementSearchField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        MGEPayementSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MGEPayementSearchFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MGEPayementSearchFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MGEPayementSearchFieldKeyTyped(evt);
            }
        });

        MGEPaymentHistTable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        MGEPaymentHistTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date paiement", "ID étudiant", "Nom", "Prénom", "Niveau", "Filiere", "Période payée", "Montant"
            }
        ));
        MGEPaymentHistTable.setRowHeight(30);
        MGEPaymentHistTable.setShowGrid(true);
        jScrollPane10.setViewportView(MGEPaymentHistTable);

        javax.swing.GroupLayout MGEPaymentHistTPLayout = new javax.swing.GroupLayout(MGEPaymentHistTP);
        MGEPaymentHistTP.setLayout(MGEPaymentHistTPLayout);
        MGEPaymentHistTPLayout.setHorizontalGroup(
            MGEPaymentHistTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1042, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MGEPaymentHistTPLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MGEPayementSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );
        MGEPaymentHistTPLayout.setVerticalGroup(
            MGEPaymentHistTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MGEPaymentHistTPLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(MGEPaymentHistTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MGEPayementSearchField))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE))
        );

        AdminTabbedPane.addTab("Historique de payements MGE", MGEPaymentHistTP);

        AdminNameLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        AdminNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        Usericone.setIcon(new javax.swing.ImageIcon("C:\\Users\\AdMin\\OneDrive\\Documents\\NetBeansProjects\\Gestion_Etudiants\\src\\main\\java\\Images\\user.png")); // NOI18N

        DeconnexionBtn.setBackground(new java.awt.Color(242, 242, 242));
        DeconnexionBtn.setIcon(new javax.swing.ImageIcon("C:\\Users\\AdMin\\OneDrive\\Documents\\NetBeansProjects\\Gestion_Etudiants\\src\\main\\java\\Images\\déconnexion.png")); // NOI18N
        DeconnexionBtn.setToolTipText("Déconnexion");
        DeconnexionBtn.setBorder(null);
        DeconnexionBtn.setMargin(new java.awt.Insets(0, 0, 0, 0));
        DeconnexionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeconnexionBtnActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        AddUserBtn.setBackground(new java.awt.Color(242, 242, 242));
        AddUserBtn.setIcon(new javax.swing.ImageIcon("C:\\Users\\AdMin\\OneDrive\\Documents\\NetBeansProjects\\Gestion_Etudiants\\src\\main\\java\\Images\\AddUser.png")); // NOI18N
        AddUserBtn.setToolTipText("Ajouter un étudiant");
        AddUserBtn.setBorder(null);
        AddUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddUserBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AdminTabbedPane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(DeconnexionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(612, 612, 612)
                        .addComponent(AdminNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Usericone)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(DeconnexionBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddUserBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(AdminNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Usericone, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AdminTabbedPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static int NombreEtudiantsISI1() throws SQLException, IOException{
        int nbre = 0;
        ConnectToBD connexion = new ConnectToBD();
        String requete = "SELECT COUNT(*) FROM etudiants where E_niveau = 'Bac+1' AND E_filiere = 'ISI'";
        try ( PreparedStatement statement = connexion.BDconnexion.prepareStatement(requete); ){
            try ( ResultSet result = statement.executeQuery(); ){
                while(result.next()){
                    nbre = result.getInt("COUNT(*)");
                }
            }
        }
        
        return nbre;
    }
    public static int NombreEtudiantsISI2() throws SQLException, IOException{
        int nbre = 0;
        ConnectToBD connexion = new ConnectToBD();
        String requete = "SELECT COUNT(*) FROM etudiants where E_niveau = 'Bac+2' AND E_filiere = 'ISI'";
        try ( PreparedStatement statement = connexion.BDconnexion.prepareStatement(requete); ){
            try ( ResultSet result = statement.executeQuery(); ){
                while(result.next()){
                    nbre = result.getInt("COUNT(*)");
                }
            }
        }
        
        return nbre;
    }
    public static int NombreEtudiantsISI3() throws SQLException, IOException{
        int nbre = 0;
        ConnectToBD connexion = new ConnectToBD();
        String requete = "SELECT COUNT(*) FROM etudiants where E_niveau = 'Bac+3' AND E_filiere = 'ISI'";
        try ( PreparedStatement statement = connexion.BDconnexion.prepareStatement(requete); ){
            try ( ResultSet result = statement.executeQuery(); ){
                while(result.next()){
                    nbre = result.getInt("COUNT(*)");
                }
            }
        }
        
        return nbre;
    }
    public static int NombreEtudiantsISI4() throws SQLException, IOException{
        int nbre = 0;
        ConnectToBD connexion = new ConnectToBD();
        String requete = "SELECT COUNT(*) FROM etudiants where E_niveau = 'Bac+4' AND E_filiere IN ('ISI', 'ISRT')";
        try ( PreparedStatement statement = connexion.BDconnexion.prepareStatement(requete); ){
            try ( ResultSet result = statement.executeQuery(); ){
                while(result.next()){
                    nbre = result.getInt("COUNT(*)");
                }
            }
        }
        
        return nbre;
    }
    public static int NombreEtudiantsISI5() throws SQLException, IOException{
        int nbre = 0;
        ConnectToBD connexion = new ConnectToBD();
        String requete = "SELECT COUNT(*) FROM etudiants where E_niveau = 'Bac+5' AND E_filiere IN ('ISI', 'ISRT')";
        try ( PreparedStatement statement = connexion.BDconnexion.prepareStatement(requete); ){
            try ( ResultSet result = statement.executeQuery(); ){
                while(result.next()){
                    nbre = result.getInt("COUNT(*)");
                }
            }
        }
        
        return nbre;
    }
    
    public static int NombreEtudiantsMGE1() throws SQLException, IOException{
        int nbre = 0;
        ConnectToBD connexion = new ConnectToBD();
        String requete = "SELECT COUNT(*) FROM etudiants where E_niveau = 'Bac+1' AND E_filiere = 'MGE'";
        try ( PreparedStatement statement = connexion.BDconnexion.prepareStatement(requete); ){
            try ( ResultSet result = statement.executeQuery(); ){
                while(result.next()){
                    nbre = result.getInt("COUNT(*)");
                }
            }
        }
        
        return nbre;
    }
    public static int NombreEtudiantsMGE2() throws SQLException, IOException{
        int nbre = 0;
        ConnectToBD connexion = new ConnectToBD();
        String requete = "SELECT COUNT(*) FROM etudiants where E_niveau = 'Bac+2' AND E_filiere = 'MGE'";
        try ( PreparedStatement statement = connexion.BDconnexion.prepareStatement(requete); ){
            try ( ResultSet result = statement.executeQuery(); ){
                while(result.next()){
                    nbre = result.getInt("COUNT(*)");
                }
            }
        }
        
        return nbre;
    }
    public static int NombreEtudiantsMGE3() throws SQLException, IOException{
        int nbre = 0;
        ConnectToBD connexion = new ConnectToBD();
        String requete = "SELECT COUNT(*) FROM etudiants where E_niveau = 'Bac+3' AND E_filiere = 'MGE'";
        try ( PreparedStatement statement = connexion.BDconnexion.prepareStatement(requete); ){
            try ( ResultSet result = statement.executeQuery(); ){
                while(result.next()){
                    nbre = result.getInt("COUNT(*)");
                }
            }
        }
        
        return nbre;
    }
    public static int NombreEtudiantsMGE4() throws SQLException, IOException{
        int nbre = 0;
        ConnectToBD connexion = new ConnectToBD();
        String requete = "SELECT COUNT(*) FROM etudiants where E_niveau = 'Bac+4' AND E_filiere IN ('MSTIC', 'FACG')";
        try ( PreparedStatement statement = connexion.BDconnexion.prepareStatement(requete); ){
            try ( ResultSet result = statement.executeQuery(); ){
                while(result.next()){
                    nbre = result.getInt("COUNT(*)");
                }
            }
        }
        
        return nbre;
    }
    public static int NombreEtudiantsMGE5() throws SQLException, IOException{
        int nbre = 0;
        ConnectToBD connexion = new ConnectToBD();
        String requete = "SELECT COUNT(*) FROM etudiants where E_niveau = 'Bac+5' AND E_filiere IN ('MSTIC', 'FACG')";
        try ( PreparedStatement statement = connexion.BDconnexion.prepareStatement(requete); ){
            try ( ResultSet result = statement.executeQuery(); ){
                while(result.next()){
                    nbre = result.getInt("COUNT(*)");
                }
            }
        }
        
        return nbre;
    }
    
    public static JTable getTableClicked(){
        return TableClicked;
    }
    
    private void DeconnexionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeconnexionBtnActionPerformed
        try {
            int rep;
            rep = JOptionPane.showConfirmDialog(null, "Souhaitez-vous vous déconnecter ?", "Message de confirmation", JOptionPane.YES_NO_OPTION);
            if(rep == JOptionPane.YES_OPTION){
                System.exit(0);
            }
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DeconnexionBtnActionPerformed

    private void AddUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddUserBtnActionPerformed
        try {
            new EtdAddingPage().setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AddUserBtnActionPerformed

    private void ISI1EtdListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ISI1EtdListTableMouseClicked
        try {
            int RowNum = ISI1EtdListTable.getSelectedRow();
            TableClicked = (JTable) evt.getSource();
            new EtudiantInformation().setVisible(true);
            EtudiantInformation.InfoEtudiant(RowNum, TableClicked);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ISI1EtdListTableMouseClicked

    private void ISI2EtdListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ISI2EtdListTableMouseClicked
        try {
            int RowNum = ISI2EtdListTable.getSelectedRow();
            TableClicked = (JTable) evt.getSource();
            new EtudiantInformation().setVisible(true);
            EtudiantInformation.InfoEtudiant(RowNum, TableClicked);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ISI2EtdListTableMouseClicked

    private void ISI3EtdListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ISI3EtdListTableMouseClicked
        try {
            int RowNum = ISI3EtdListTable.getSelectedRow();
            TableClicked = (JTable) evt.getSource();
            new EtudiantInformation().setVisible(true);
            EtudiantInformation.InfoEtudiant(RowNum, TableClicked);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ISI3EtdListTableMouseClicked

    private void ISI4EtdListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ISI4EtdListTableMouseClicked
        try {
            int RowNum = ISI4EtdListTable.getSelectedRow();
            TableClicked = (JTable) evt.getSource(); 
            new EtudiantInformation().setVisible(true);
            EtudiantInformation.InfoEtudiant(RowNum, TableClicked);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ISI4EtdListTableMouseClicked

    private void ISI5EtdListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ISI5EtdListTableMouseClicked
        try {
            int RowNum = ISI5EtdListTable.getSelectedRow();
            TableClicked = (JTable) evt.getSource(); 
            new EtudiantInformation().setVisible(true);
            EtudiantInformation.InfoEtudiant(RowNum, TableClicked);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ISI5EtdListTableMouseClicked

    private void MGE1EtdListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MGE1EtdListTableMouseClicked
        try {
            int RowNum = MGE1EtdListTable.getSelectedRow();
            TableClicked = (JTable) evt.getSource(); 
            new EtudiantInformation().setVisible(true);
            EtudiantInformation.InfoEtudiant(RowNum, TableClicked);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_MGE1EtdListTableMouseClicked

    private void MGE2EtdListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MGE2EtdListTableMouseClicked
        try {
            int RowNum = MGE2EtdListTable.getSelectedRow();
            TableClicked = (JTable) evt.getSource(); 
            new EtudiantInformation().setVisible(true);
            EtudiantInformation.InfoEtudiant(RowNum, TableClicked);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_MGE2EtdListTableMouseClicked

    private void MGE3EtdListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MGE3EtdListTableMouseClicked
        try {
            int RowNum = MGE3EtdListTable.getSelectedRow();
            TableClicked = (JTable) evt.getSource(); 
            new EtudiantInformation().setVisible(true);
            EtudiantInformation.InfoEtudiant(RowNum, TableClicked);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_MGE3EtdListTableMouseClicked

    private void MGE4EtdListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MGE4EtdListTableMouseClicked
        try {
            int RowNum = MGE4EtdListTable.getSelectedRow();
            TableClicked = (JTable) evt.getSource(); 
            new EtudiantInformation().setVisible(true);
            EtudiantInformation.InfoEtudiant(RowNum, TableClicked);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_MGE4EtdListTableMouseClicked

    private void MGE5EtdListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MGE5EtdListTableMouseClicked
        try {
            int RowNum = MGE5EtdListTable.getSelectedRow();
            TableClicked = (JTable) evt.getSource(); 
            new EtudiantInformation().setVisible(true);
            EtudiantInformation.InfoEtudiant(RowNum, TableClicked);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_MGE5EtdListTableMouseClicked

    private void ISI1SearchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISI1SearchFieldKeyPressed
        sorter = new TableRowSorter<>((DefaultTableModel) ISI1EtdListTable.getModel());
        ISI1EtdListTable.setRowSorter(sorter);
        
        String SearchText = ISI1SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_ISI1SearchFieldKeyPressed

    private void ISI1SearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISI1SearchFieldKeyReleased
        sorter = new TableRowSorter<>((DefaultTableModel) ISI1EtdListTable.getModel());
        ISI1EtdListTable.setRowSorter(sorter);
        
        String SearchText = ISI1SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_ISI1SearchFieldKeyReleased

    private void ISI1SearchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISI1SearchFieldKeyTyped
        sorter = new TableRowSorter<>((DefaultTableModel) ISI1EtdListTable.getModel());
        ISI1EtdListTable.setRowSorter(sorter);
        
        String SearchText = ISI1SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_ISI1SearchFieldKeyTyped

    private void ISI2SearchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISI2SearchFieldKeyPressed
        sorter = new TableRowSorter<>((DefaultTableModel) ISI2EtdListTable.getModel());
        ISI2EtdListTable.setRowSorter(sorter);
        
        String SearchText = ISI2SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_ISI2SearchFieldKeyPressed

    private void ISI2SearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISI2SearchFieldKeyReleased
        sorter = new TableRowSorter<>((DefaultTableModel) ISI2EtdListTable.getModel());
        ISI2EtdListTable.setRowSorter(sorter);
        
        String SearchText = ISI2SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_ISI2SearchFieldKeyReleased

    private void ISI2SearchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISI2SearchFieldKeyTyped
        sorter = new TableRowSorter<>((DefaultTableModel) ISI2EtdListTable.getModel());
        ISI2EtdListTable.setRowSorter(sorter);
        
        String SearchText = ISI2SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_ISI2SearchFieldKeyTyped

    private void ISI3SearchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISI3SearchFieldKeyPressed
        sorter = new TableRowSorter<>((DefaultTableModel) ISI3EtdListTable.getModel());
        ISI3EtdListTable.setRowSorter(sorter);
        
        String SearchText = ISI3SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_ISI3SearchFieldKeyPressed

    private void ISI3SearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISI3SearchFieldKeyReleased
        sorter = new TableRowSorter<>((DefaultTableModel) ISI3EtdListTable.getModel());
        ISI3EtdListTable.setRowSorter(sorter);
        
        String SearchText = ISI3SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_ISI3SearchFieldKeyReleased

    private void ISI3SearchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISI3SearchFieldKeyTyped
        sorter = new TableRowSorter<>((DefaultTableModel) ISI3EtdListTable.getModel());
        ISI3EtdListTable.setRowSorter(sorter);
        
        String SearchText = ISI3SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_ISI3SearchFieldKeyTyped

    private void ISI4SearchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISI4SearchFieldKeyPressed
        sorter = new TableRowSorter<>((DefaultTableModel) ISI4EtdListTable.getModel());
        ISI4EtdListTable.setRowSorter(sorter);
        
        String SearchText = ISI4SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_ISI4SearchFieldKeyPressed

    private void ISI4SearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISI4SearchFieldKeyReleased
        sorter = new TableRowSorter<>((DefaultTableModel) ISI4EtdListTable.getModel());
        ISI4EtdListTable.setRowSorter(sorter);
        
        String SearchText = ISI4SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_ISI4SearchFieldKeyReleased

    private void ISI4SearchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISI4SearchFieldKeyTyped
        sorter = new TableRowSorter<>((DefaultTableModel) ISI4EtdListTable.getModel());
        ISI4EtdListTable.setRowSorter(sorter);
        
        String SearchText = ISI4SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_ISI4SearchFieldKeyTyped

    private void ISI5SearchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISI5SearchFieldKeyPressed
        sorter = new TableRowSorter<>((DefaultTableModel) ISI5EtdListTable.getModel());
        ISI5EtdListTable.setRowSorter(sorter);
        
        String SearchText = ISI5SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_ISI5SearchFieldKeyPressed

    private void ISI5SearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISI5SearchFieldKeyReleased
        sorter = new TableRowSorter<>((DefaultTableModel) ISI5EtdListTable.getModel());
        ISI5EtdListTable.setRowSorter(sorter);
        
        String SearchText = ISI5SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_ISI5SearchFieldKeyReleased

    private void ISI5SearchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISI5SearchFieldKeyTyped
        sorter = new TableRowSorter<>((DefaultTableModel) ISI5EtdListTable.getModel());
        ISI5EtdListTable.setRowSorter(sorter);
        
        String SearchText = ISI5SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_ISI5SearchFieldKeyTyped

    private void MGE1SearchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MGE1SearchFieldKeyPressed
        sorter = new TableRowSorter<>((DefaultTableModel) MGE1EtdListTable.getModel());
        MGE1EtdListTable.setRowSorter(sorter);
        
        String SearchText = MGE1SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_MGE1SearchFieldKeyPressed

    private void MGE1SearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MGE1SearchFieldKeyReleased
        sorter = new TableRowSorter<>((DefaultTableModel) MGE1EtdListTable.getModel());
        MGE1EtdListTable.setRowSorter(sorter);
        
        String SearchText = MGE1SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_MGE1SearchFieldKeyReleased

    private void MGE1SearchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MGE1SearchFieldKeyTyped
        sorter = new TableRowSorter<>((DefaultTableModel) MGE1EtdListTable.getModel());
        MGE1EtdListTable.setRowSorter(sorter);
        
        String SearchText = MGE1SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_MGE1SearchFieldKeyTyped

    private void MGE2SearchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MGE2SearchFieldKeyPressed
        sorter = new TableRowSorter<>((DefaultTableModel) MGE2EtdListTable.getModel());
        MGE2EtdListTable.setRowSorter(sorter);
        
        String SearchText = MGE2SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_MGE2SearchFieldKeyPressed

    private void MGE2SearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MGE2SearchFieldKeyReleased
        sorter = new TableRowSorter<>((DefaultTableModel) MGE2EtdListTable.getModel());
        MGE2EtdListTable.setRowSorter(sorter);
        
        String SearchText = MGE2SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_MGE2SearchFieldKeyReleased

    private void MGE2SearchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MGE2SearchFieldKeyTyped
        sorter = new TableRowSorter<>((DefaultTableModel) MGE2EtdListTable.getModel());
        MGE2EtdListTable.setRowSorter(sorter);
        
        String SearchText = MGE2SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_MGE2SearchFieldKeyTyped

    private void MGE3SearchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MGE3SearchFieldKeyPressed
        sorter = new TableRowSorter<>((DefaultTableModel) MGE3EtdListTable.getModel());
        MGE3EtdListTable.setRowSorter(sorter);
        
        String SearchText = MGE3SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_MGE3SearchFieldKeyPressed

    private void MGE3SearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MGE3SearchFieldKeyReleased
        sorter = new TableRowSorter<>((DefaultTableModel) MGE3EtdListTable.getModel());
        MGE3EtdListTable.setRowSorter(sorter);
        
        String SearchText = MGE3SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_MGE3SearchFieldKeyReleased

    private void MGE3SearchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MGE3SearchFieldKeyTyped
        sorter = new TableRowSorter<>((DefaultTableModel) MGE3EtdListTable.getModel());
        MGE3EtdListTable.setRowSorter(sorter);
        
        String SearchText = MGE3SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_MGE3SearchFieldKeyTyped

    private void MGE4SearchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MGE4SearchFieldKeyPressed
        sorter = new TableRowSorter<>((DefaultTableModel) MGE4EtdListTable.getModel());
        MGE4EtdListTable.setRowSorter(sorter);
        
        String SearchText = MGE4SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_MGE4SearchFieldKeyPressed

    private void MGE4SearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MGE4SearchFieldKeyReleased
        sorter = new TableRowSorter<>((DefaultTableModel) MGE4EtdListTable.getModel());
        MGE4EtdListTable.setRowSorter(sorter);
        
        String SearchText = MGE4SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_MGE4SearchFieldKeyReleased

    private void MGE4SearchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MGE4SearchFieldKeyTyped
        sorter = new TableRowSorter<>((DefaultTableModel) MGE4EtdListTable.getModel());
        MGE4EtdListTable.setRowSorter(sorter);
        
        String SearchText = MGE4SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_MGE4SearchFieldKeyTyped

    private void MGE5SearchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MGE5SearchFieldKeyPressed
        sorter = new TableRowSorter<>((DefaultTableModel) MGE5EtdListTable.getModel());
        MGE5EtdListTable.setRowSorter(sorter);
        
        String SearchText = MGE5SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_MGE5SearchFieldKeyPressed

    private void MGE5SearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MGE5SearchFieldKeyReleased
        sorter = new TableRowSorter<>((DefaultTableModel) MGE5EtdListTable.getModel());
        MGE5EtdListTable.setRowSorter(sorter);
        
        String SearchText = MGE5SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_MGE5SearchFieldKeyReleased

    private void MGE5SearchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MGE5SearchFieldKeyTyped
        sorter = new TableRowSorter<>((DefaultTableModel) MGE5EtdListTable.getModel());
        MGE5EtdListTable.setRowSorter(sorter);
        
        String SearchText = MGE5SearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_MGE5SearchFieldKeyTyped

    private void ISIPayementSearchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISIPayementSearchFieldKeyPressed
        sorter = new TableRowSorter<>((DefaultTableModel) ISIPaymentHistTable.getModel());
        ISIPaymentHistTable.setRowSorter(sorter);
        
        String SearchText = ISIPayementSearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_ISIPayementSearchFieldKeyPressed

    private void ISIPayementSearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISIPayementSearchFieldKeyReleased
        sorter = new TableRowSorter<>((DefaultTableModel) ISIPaymentHistTable.getModel());
        ISIPaymentHistTable.setRowSorter(sorter);
        
        String SearchText = ISIPayementSearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_ISIPayementSearchFieldKeyReleased

    private void ISIPayementSearchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISIPayementSearchFieldKeyTyped
        sorter = new TableRowSorter<>((DefaultTableModel) ISIPaymentHistTable.getModel());
        ISIPaymentHistTable.setRowSorter(sorter);
        
        String SearchText = ISIPayementSearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_ISIPayementSearchFieldKeyTyped

    private void MGEPayementSearchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MGEPayementSearchFieldKeyPressed
        sorter = new TableRowSorter<>((DefaultTableModel) MGEPaymentHistTable.getModel());
        MGEPaymentHistTable.setRowSorter(sorter);
        
        String SearchText = MGEPayementSearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_MGEPayementSearchFieldKeyPressed

    private void MGEPayementSearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MGEPayementSearchFieldKeyReleased
        sorter = new TableRowSorter<>((DefaultTableModel) MGEPaymentHistTable.getModel());
        MGEPaymentHistTable.setRowSorter(sorter);
        
        String SearchText = MGEPayementSearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_MGEPayementSearchFieldKeyReleased

    private void MGEPayementSearchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MGEPayementSearchFieldKeyTyped
        sorter = new TableRowSorter<>((DefaultTableModel) MGEPaymentHistTable.getModel());
        MGEPaymentHistTable.setRowSorter(sorter);
        
        String SearchText = MGEPayementSearchField.getText();
        if (SearchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + SearchText));
            } catch (PatternSyntaxException e) {}
        }
    }//GEN-LAST:event_MGEPayementSearchFieldKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AcceuilPane;
    private javax.swing.JButton AddUserBtn;
    public static javax.swing.JLabel AdminNameLabel;
    private javax.swing.JTabbedPane AdminTabbedPane;
    private javax.swing.JButton DeconnexionBtn;
    private javax.swing.JPanel ISI1EtdListPane;
    public static javax.swing.JTable ISI1EtdListTable;
    private javax.swing.JLabel ISI1EtdTotalLabel;
    public static javax.swing.JLabel ISI1EtdTotalResult;
    public static javax.swing.JLabel ISI1EtdTotalResult1;
    private javax.swing.JTextField ISI1SearchField;
    private javax.swing.JPanel ISI2EtdListPane;
    public static javax.swing.JTable ISI2EtdListTable;
    private javax.swing.JLabel ISI2EtdTotalLabel;
    public static javax.swing.JLabel ISI2EtdTotalResult;
    private javax.swing.JTextField ISI2SearchField;
    private javax.swing.JPanel ISI3EtdListPane;
    public static javax.swing.JTable ISI3EtdListTable;
    private javax.swing.JLabel ISI3EtdTotalLabel;
    public static javax.swing.JLabel ISI3EtdTotalResult;
    private javax.swing.JTextField ISI3SearchField;
    private javax.swing.JPanel ISI4EtdListPane;
    public static javax.swing.JTable ISI4EtdListTable;
    private javax.swing.JLabel ISI4EtdTotalLabel;
    public static javax.swing.JLabel ISI4EtdTotalResult;
    private javax.swing.JTextField ISI4SearchField;
    private javax.swing.JPanel ISI5EtdListPane;
    public static javax.swing.JTable ISI5EtdListTable;
    private javax.swing.JLabel ISI5EtdTotalLabel;
    public static javax.swing.JLabel ISI5EtdTotalResult;
    private javax.swing.JTextField ISI5SearchField;
    private javax.swing.JPanel ISIEtdListPane;
    private javax.swing.JTabbedPane ISIEtdListTabbedPane;
    private javax.swing.JTextField ISIPayementSearchField;
    private javax.swing.JPanel ISIPaymentHistTP;
    public static javax.swing.JTable ISIPaymentHistTable;
    private javax.swing.JLabel MG5EtdTotalLabel;
    private javax.swing.JPanel MGE1EtdListPane;
    public static javax.swing.JTable MGE1EtdListTable;
    private javax.swing.JLabel MGE1EtdTotalLable;
    public static javax.swing.JLabel MGE1EtdTotalResult;
    private javax.swing.JTextField MGE1SearchField;
    private javax.swing.JPanel MGE2EtdListPane;
    public static javax.swing.JTable MGE2EtdListTable;
    private javax.swing.JLabel MGE2EtdTotalLabel;
    public static javax.swing.JLabel MGE2EtdTotalResult;
    private javax.swing.JTextField MGE2SearchField;
    private javax.swing.JPanel MGE3EtdListPane;
    public static javax.swing.JTable MGE3EtdListTable;
    private javax.swing.JLabel MGE3EtdTotalLabel;
    public static javax.swing.JLabel MGE3EtdTotalResult;
    private javax.swing.JTextField MGE3SearchField;
    private javax.swing.JPanel MGE4EtdListPane;
    public static javax.swing.JTable MGE4EtdListTable;
    private javax.swing.JLabel MGE4EtdTotalLabel;
    public static javax.swing.JLabel MGE4EtdTotalResult;
    private javax.swing.JTextField MGE4SearchField;
    private javax.swing.JPanel MGE5EtdListPane;
    public static javax.swing.JTable MGE5EtdListTable;
    public static javax.swing.JLabel MGE5EtdTotalResult;
    private javax.swing.JTextField MGE5SearchField;
    private javax.swing.JPanel MGEEtdListPane;
    private javax.swing.JTabbedPane MGEEtdListeTabbedPane;
    private javax.swing.JTextField MGEPayementSearchField;
    private javax.swing.JPanel MGEPaymentHistTP;
    public static javax.swing.JTable MGEPaymentHistTable;
    private javax.swing.JLabel Usericone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
